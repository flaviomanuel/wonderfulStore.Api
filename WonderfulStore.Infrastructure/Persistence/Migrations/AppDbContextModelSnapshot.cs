// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WonderfulStore.Infrastructure;

#nullable disable

namespace WonderfulStore.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WonderfulStore.Core.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdPromotion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdPromotion");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WonderfulStore.Core.Entities.Promotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Promotions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("348303ec-f3dd-4180-94e6-4ba7701926d8"),
                            Description = "2 por 1"
                        },
                        new
                        {
                            Id = new Guid("904a6594-c0de-4fe7-a952-8fdbedb3a8ac"),
                            Description = "3 por R$10"
                        });
                });

            modelBuilder.Entity("WonderfulStore.Core.Entities.ShoppingCart", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("WonderfulStore.Core.Entities.ShoppingCartProduct", b =>
                {
                    b.Property<Guid>("IdProduct")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdShoppingCart")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdProduct", "IdShoppingCart");

                    b.HasIndex("IdShoppingCart");

                    b.ToTable("ShoppingCartProducts", (string)null);
                });

            modelBuilder.Entity("WonderfulStore.Core.Entities.Product", b =>
                {
                    b.HasOne("WonderfulStore.Core.Entities.Promotion", "Promotion")
                        .WithMany("Products")
                        .HasForeignKey("IdPromotion")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("WonderfulStore.Core.Entities.ShoppingCartProduct", b =>
                {
                    b.HasOne("WonderfulStore.Core.Entities.Product", "Product")
                        .WithMany("ShoppingCartProducts")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WonderfulStore.Core.Entities.ShoppingCart", "ShoppingCart")
                        .WithMany("ShoppingCartProducts")
                        .HasForeignKey("IdShoppingCart")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("ShoppingCart");
                });

            modelBuilder.Entity("WonderfulStore.Core.Entities.Product", b =>
                {
                    b.Navigation("ShoppingCartProducts");
                });

            modelBuilder.Entity("WonderfulStore.Core.Entities.Promotion", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("WonderfulStore.Core.Entities.ShoppingCart", b =>
                {
                    b.Navigation("ShoppingCartProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
